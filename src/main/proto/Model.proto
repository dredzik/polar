package io.typedef.polar.model;

option java_package = "io.typedef.polar.model";
option java_outer_classname = "Model";

message CommandMessage {
    optional CommandType type = 1;
    optional string path = 2;
}

enum CommandType {
    READ = 0;
    WRITE = 1;
    DELETE = 3;
}

message ListMessage {
    message ListEntry {
        optional string path = 1;
        optional uint32 size = 2;
        optional DateTime created = 3;
        optional DateTime modified = 4;
        optional DateTime unknown = 5;
    }

    repeated ListEntry entry = 1;
}

message PhysicalData {
    message Birthday {
        optional Date date = 1;
        optional DateTime modified = 2;
    }

    message Gender {
        optional Type type = 1;
        optional DateTime modified = 2;

        enum Type {
            UNKNOWN = 0;
            MALE = 1;
            FEMALE = 2;
        }
    }

    optional Birthday birthday = 1;
    optional Gender gender = 2;
    optional FloatM weight = 3;
    optional FloatM height = 4;
    optional UInt32M maximumHeartrate = 5;
    optional UInt32M restingHeartrate = 6;
    optional UInt32M aerobicThreshold = 8;
    optional UInt32M anaerobicThreshold = 9;
    optional UInt32M vo2max = 10;
    optional UInt32M unknown1 = 11;
    optional UInt32M unknown2 = 12;
    optional DateTime modified = 100;
}

message SessionData {
    message Label {
        optional string name = 1;
    }

    optional DateTime start = 1;
    optional DateTime end = 20;
    optional uint32 exerciseCount = 2;
    optional string device = 3;
    optional string model = 4;
    optional Time duration = 5;
    optional float distance = 6;
    optional uint32 calories = 7;
    optional Heartrate heartrate = 8;
    optional Time heartrateDuration = 9;
    optional TrainingLoad trainingLoad = 10;
    optional Label label = 11;
}

message ExerciseData {
    message Sport {
        optional uint64 value = 1;
    }

    message RunningIndex {
        optional uint32 value = 1;
        optional Time duration = 2;
    }

    optional DateTime start = 1;
    optional Time duration = 2;
    optional Sport sport = 3;
    optional float distance = 4;
    optional uint32 calories = 5;
    optional TrainingLoad trainingLoad = 6;
    optional RunningIndex index = 9;
    optional float ascent = 10;
    optional float descent = 11;
}

message LapSetData {
    message Summary {
        optional Time best = 1;
        optional Time average = 2;
    }

    repeated LapData lap = 1;
    optional Summary summary = 2;
}

message LapData {
    message Header {
        enum Type {
            MANUAL = 0;
            AUTO = 1;
        }

        optional Time split = 1;
        optional Time duration = 2;
        optional float distance = 3;
        optional float ascent = 4;
        optional float descent = 5;
        optional Type type = 6;
    }

    optional Header header = 1;
    optional StatisticData statistic = 2;
}

message RouteData {
    repeated uint32 duration = 1;
    repeated double latitude = 2;
    repeated double longitude = 3;
    repeated sint32 altitude = 4;
    repeated uint32 satellites = 5;
    optional DateTime timestamp = 9;
}

message SampleData {
    optional Time interval = 1;
    repeated uint32 heartrate = 2;
    repeated float altitude = 6;
    repeated float speed = 9;
    repeated float distance = 11;
}

message StatisticData {
    optional Heartrate heartrate = 1;
    optional Speed speed = 2;
    optional Altitude altitude = 4;
}

message ZoneData {
    enum HeartrateSource {
        SENSOR = 0;
    }

    message HeartrateZone {
        message Limit {
            optional uint32 low = 1;
            optional uint32 hight = 2;
        }

        optional Limit limit = 1;
        optional Time duration = 2;
    }

    message SpeedZone {
        message Limit {
            optional float low = 1;
            optional float high = 2;
        }

        optional Limit limit = 1;
        optional Time duration = 2;
        optional float distance = 3;
    }

    repeated HeartrateZone heartrateZone = 1;
    repeated SpeedZone speedZone = 4;
    optional HeartrateSource heartrateSource = 10;
}

message TrainingLoad {
    optional uint32 value = 1;
    optional Time recovery = 2;
    optional uint32 carbs = 3;
    optional uint32 protein = 4;
    optional uint32 fat = 5;
}

message Speed {
    optional float average = 1;
    optional float maximum = 2;
    optional float minimum = 3;
}

message Altitude {
    optional float average = 1;
    optional float maximum = 2;
    optional float minimum = 3;
}

message Heartrate {
    optional uint32 average = 1;
    optional uint32 maximum = 2;
    optional uint32 minimum = 3;
}

message FloatM {
    optional float value = 1;
    optional DateTime modified = 2;
}

message UInt32M {
    optional uint32 value = 1;
    optional DateTime modified = 2;
}

message DateTime {
    optional Date date = 1;
    optional Time time = 2;
    optional uint32 timezone = 3;
}

message Date {
    optional uint32 year = 1;
    optional uint32 month = 2;
    optional uint32 day = 3;
}

message Time {
    optional uint32 hour = 1;
    optional uint32 minute = 2;
    optional uint32 second = 3;
    optional uint32 milisecond = 4;
}
